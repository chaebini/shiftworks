<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="customAccessDenied" class="org.shiftworks.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess" class="org.shiftworks.security.CustomLoginSuccessHandler"></bean>
	<bean id="customUserDetailsService" class="org.shiftworks.security.CustomUserDetailService"></bean>
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	
	<security:http auto-config="true" use-expressions="true">
	
		<!-- url별 접근 권한 설정 -->
		
		<!-- 인증된 사용자만 접근 가능 -->
		<security:intercept-url pattern="/" access="isAuthenticated()"/>

		
		<!-- 관리자만 접근 가능한 페이지를 아래 형식으로 추가 -->
		<!-- 1. 여러 권한 정보를 허용하고 싶은 경우(hasAnyRole 사용) -->
		<security:intercept-url pattern="/sample/member" access="hasAnyRole('ROLE_MEMBER', 'ROLE_ADMIN')"/>
		<!-- 2. 하나의 권한 정보만을 허용하고 싶은 경우(hasRole 사용) -->
		<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
		
		

		<!-- 커스텀 로그인 페이지 사용 -->
		<security:form-login login-page="/customLogin"
			authentication-success-handler-ref="customLoginSuccess"/>
		
		<!-- 로그아웃 요청 url 등록 -->
		<security:logout logout-url="/customLogout" invalidate-session="true"/>
	
		<!-- 접근 제한 시 /accessError로 이동 -->
		<security:access-denied-handler ref="customAccessDenied"/>
		
	</security:http>
	
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
		
			<security:password-encoder ref="bcryptPasswordEncoder"/>
			
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
