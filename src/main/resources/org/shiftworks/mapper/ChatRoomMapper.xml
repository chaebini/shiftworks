<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.shiftworks.mapper.ChatRoomMapper">

<!-- 연관 관계 MessageVO - ReceiverVO - MessengerFileVO -->
	<!-- <resultMap type="org.shiftworks.domain.MessageVO" id="messageMap">
	
		<result column="msg_id" property="msg_id" />
		<result column="notice" property="notice" />
		<result column="important" property="important" />
		<result column="content" property="content" />
		<result column="sendtime" property="sendtime" />
		<result column="sender" property="sender" />
		<collection property="receivers" resultMap="receiverMap"/> -->
		<!-- 1 : 다 관계의 경우 데이터 매핑시켜준다. 
			association => 1 : 1 관계 
			collection => 1 : 다 관계 (한명의 유저가 작성한 글 목록) 일반 컬럼과 pk 구분 가능 pk 칼럼에게는 result 아닌 id 사용 -->
	<!-- </resultMap>
	
	<resultMap type="org.shiftworks.domain.ReceiverVO" id="receiverMap">
		<result column="msg_id" property="msg_id"/>
		<result column="emp_id" property="emp_id"/>
		<result column="dept_id" property="dept_id"/>
		<result column="checking" property="checking"/>
	</resultMap>
	  -->
	
	<insert id="insertChatRoom" parameterType="org.shiftworks.domain.ChatRoomDTO">
		INSERT INTO chatroom(room_id, room_name, emp_id, dept_id) 
			VALUES(#{room_id}, #{room_name}, #{emp_id}, #{dept_id})
	</insert>
	
	<select id="getList" parameterType="String" resultType="org.shiftworks.domain.ChatRoomVO">
		SELECT * FROM chatroom WHERE emp_id = #{emp_id}
	</select>
	
	<delete id="deleteChatRoom" parameterType="Integer">
		DELETE FROM chatroom
           WHERE room_id = #{room_id}
	</delete>
	
	<update id="updateLastchat" parameterType="org.shiftworks.domain.ChatVO">
		UPDATE chatroom
			SET lastchat = #{content}, lastchat_time = #{sendtime}
			WHERE room_id = #{room_id}
	</update>

</mapper>
