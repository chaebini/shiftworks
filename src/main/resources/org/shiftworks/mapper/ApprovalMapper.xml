<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.shiftworks.mapper.ApprovalMapper">

	<!-- 결재 문서 전체 리스트 조회 -->
	<select id="getList" resultType="org.shiftworks.domain.ApprovalVO">
		<![CDATA[
			select*from approval where apr_id>0 
			]]>	
			
	</select>
	
	
	<!-- 결재할 문서함 전체 리스트 조회 및 페이징 처리 -->
	 <select id ="getReceivedListWithPaging" resultType="org.shiftworks.domain.ApprovalVO">
		<![CDATA[
			select
				apr_id, af_id, emp_id, apr_receivedate, apr_title, apr_content,
				apr_status, apr_comment, apr_signdate
			from
			(
				select /*+INDEX_DESC(approval approval_pk) */
					rownum rn, apr_id, af_id, emp_id, apr_receivedate, apr_title, apr_content,
					apr_status, apr_comment, apr_signdate	
				from
					approval
				where rownum <= #{pageNum} * #{amount} and apr_status = '0'
			)
			where rn > (#{pageNum} -1) * #{amount} 
		]]>	
	</select>
	
	
	<!-- 결재 문서 작성 -->
	<insert id="insert">
		insert into approval (apr_id, af_id, emp_id, apr_receivedate, apr_title, apr_content,
			apr_status, apr_signdate) 
		values(approval_seq.nextval,#{af_id},#{emp_id},sysdate
		,#{apr_title},#{apr_content},'0',sysdate)
	</insert>
	
	
	<!-- 결재 문서 상세 보기 -->
	<select id="read" resultType="org.shiftworks.domain.ApprovalVO">
		select * from approval where apr_id = #{apr_id}
	</select>
	
	
	<!-- 결재 문서 리스트 페이징 처리 -->
	<select id ="getListWithPaging" resultType="org.shiftworks.domain.ApprovalVO">
		<![CDATA[
			select
				apr_id, af_id, emp_id, apr_receivedate, apr_title, apr_content,
				apr_status, apr_comment, apr_signdate
			from
			(
			select /*+INDEX_DESC(approval approval_pk) */
				rownum rn, apr_id, af_id, emp_id, apr_receivedate, apr_title, apr_content,
				apr_status, apr_comment, apr_signdate	
			from
				approval
			where rownum <= #{pageNum} * #{amount} 	
			)
			where rn > (#{pageNum} -1) * #{amount}
		]]>	
	</select> 
	
	
	<!-- 결재 상태 변경 및 의견 추가 -->
	<update id="update">
		update approval
		set apr_status = #{apr_status},
		apr_comment = #{apr_comment},
		apr_signdate = sysdate
		where apr_id = #{apr_id}
	</update>
	
	
	<!-- 결재 처리(반려, 승인) -->
	<update id="updateStatus">
		update approval 
		set apr_status = #{status}
		where apr_id = #{apr_id}
	</update>
	
	
	<!-- 전체 결재 문서수 조회 -->
	<select id="getTotal" resultType="int">
		select count(*) from approval
	</select>

	<!-- 결재할 문서함 전체 결재 문서수 조회 -->
	<select id="getReceivedTotal" resultType="int">
		select count(*) from approval where apr_status = 0
	</select>
	
	<!-- 임시저장 구현 -->
	
		<!--  임시저장 등록 -->
		<insert id="temporalApr">
			insert into temp_apr(temp_id, dept_id, emp_id, af_id, temp_title, temp_content)
			values(temp_apr_seq.nextval, #{dept_id}, #{emp_id}, #{af_id}, #{temp_title}, #{temp_content})
		</insert>
		
		
		<!-- 부서번호를 얻기 위한 임시 쿼리문 -->
		<select id="getDept" resultType="String">
			select dept_id from employee where emp_id = #{emp_id}
		</select>
		
		<!-- 임시저장 조회 -->
		<select id="tempList" resultType="org.shiftworks.domain.TempApprovalVO">
			select * from temp_apr where emp_id=#{emp_id}
		</select>
		
		<!-- 임시저장 삭제 -->
		<delete id="deleteTemp">
			delete from temp_apr where temp_id = #{temp_id}
		</delete>
	
		<!-- 임시저장 선택(수정) -->
		<select id="tempSelect" resultType="org.shiftworks.domain.TempApprovalVO">
			select * from temp_apr where temp_id = #{temp_id}
		</select>
	
	
	
	
	
	

</mapper>
